{"ast":null,"code":"var _s = $RefreshSig$();\n//returns {lat, lon, error, loading}\nimport { useState, useEffect } from 'react';\nimport { getCurrentPosition } from '../utils/geolocation';\n\n//hook to get user's current latitude and longitude\nexport default function useGeolocation() {\n  _s();\n  const [coords, setCoords] = useState({\n    lat: null,\n    lon: null\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    let cancelled = false;\n    getCurrentPosition().then(position => {\n      if (cancelled) return;\n      setCoords({\n        lat: position.coords.latitude,\n        lon: position.coords.longitude\n      });\n    }).catch(err => {\n      if (cancelled) return;\n      setError(err.message);\n    }).finally(() => {\n      if (cancelled) return;\n      setLoading(false);\n    });\n    return () => {\n      cancelled = true;\n    };\n  }, []);\n  return {\n    lat: coords.lat,\n    lon: coords.lon,\n    loading,\n    error\n  };\n}\n_s(useGeolocation, \"e2T+zAZht4saSdzgzId+gLwlHyw=\");","map":{"version":3,"names":["useState","useEffect","getCurrentPosition","useGeolocation","_s","coords","setCoords","lat","lon","loading","setLoading","error","setError","cancelled","then","position","latitude","longitude","catch","err","message","finally"],"sources":["/Users/dfashemo/seoTechDev/weatherApp/src/hooks/useGeolocation.js"],"sourcesContent":["//returns {lat, lon, error, loading}\nimport { useState, useEffect } from 'react';\nimport { getCurrentPosition } from '../utils/geolocation';\n\n//hook to get user's current latitude and longitude\nexport default function useGeolocation() {\n  const [coords, setCoords] = useState({ lat: null, lon: null });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    let cancelled = false;\n\n    getCurrentPosition()\n      .then(position => {\n        if (cancelled) return;\n        setCoords({\n          lat: position.coords.latitude,\n          lon: position.coords.longitude,\n        });\n      })\n      .catch(err => {\n        if (cancelled) return;\n        setError(err.message);\n      })\n      .finally(() => {\n        if (cancelled) return;\n        setLoading(false);\n      });\n\n    return () => {\n      cancelled = true;\n    };\n  }, []);\n\n  return {\n    lat: coords.lat,\n    lon: coords.lon,\n    loading,\n    error,\n  };\n}"],"mappings":";AAAA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,kBAAkB,QAAQ,sBAAsB;;AAEzD;AACA,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACvC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC;IAAEO,GAAG,EAAE,IAAI;IAAEC,GAAG,EAAE;EAAK,CAAC,CAAC;EAC9D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,IAAIY,SAAS,GAAG,KAAK;IAErBX,kBAAkB,CAAC,CAAC,CACjBY,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAIF,SAAS,EAAE;MACfP,SAAS,CAAC;QACRC,GAAG,EAAEQ,QAAQ,CAACV,MAAM,CAACW,QAAQ;QAC7BR,GAAG,EAAEO,QAAQ,CAACV,MAAM,CAACY;MACvB,CAAC,CAAC;IACJ,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;MACZ,IAAIN,SAAS,EAAE;MACfD,QAAQ,CAACO,GAAG,CAACC,OAAO,CAAC;IACvB,CAAC,CAAC,CACDC,OAAO,CAAC,MAAM;MACb,IAAIR,SAAS,EAAE;MACfH,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;IAEJ,OAAO,MAAM;MACXG,SAAS,GAAG,IAAI;IAClB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACLN,GAAG,EAAEF,MAAM,CAACE,GAAG;IACfC,GAAG,EAAEH,MAAM,CAACG,GAAG;IACfC,OAAO;IACPE;EACF,CAAC;AACH;AAACP,EAAA,CApCuBD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}