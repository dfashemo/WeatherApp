{"ast":null,"code":"var _s = $RefreshSig$();\n// src/hooks/useWeather.js\nimport { useState, useEffect } from 'react';\nimport { fetchCurrentByCoords, fetchDailyForecastByCoords, fetchHourlyForecastByCoords, geocodeCity } from '../api/weather';\n\n/**\n * @param {{\n *   city?: string,\n *   geo?: { lat: number, lon: number },\n *   units?: 'METRIC' | 'IMPERIAL'\n * }} options\n */\nexport function useWeather({\n  city = null,\n  geo = null,\n  units = 'METRIC'\n} = {}) {\n  _s();\n  const [current, setCurrent] = useState(null);\n  const [daily, setDaily] = useState(null);\n  const [hourly, setHourly] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    let cancelled = false;\n    async function loadWeather() {\n      setLoading(true);\n      setError(null);\n      try {\n        // 1) figure out coords\n        const coords = city ? await geocodeCity(city) : {\n          lat: geo.lat,\n          lon: geo.lon\n        };\n\n        // 2) fire all three with the correct units\n        const [curRes, dayRes, hrRes] = await Promise.all([fetchCurrentByCoords(coords, units), fetchDailyForecastByCoords(coords, 5, 5, units), fetchHourlyForecastByCoords(coords, 24, 24, units)]);\n        if (!cancelled) {\n          setCurrent(curRes);\n          setDaily(dayRes.forecastDays || dayRes);\n          setHourly(hrRes.forecastHours || hrRes);\n        }\n      } catch (err) {\n        if (!cancelled) setError(err.message);\n      } finally {\n        if (!cancelled) setLoading(false);\n      }\n    }\n\n    // only run if we have a city or geo coords\n    if (city && city.trim() || (geo === null || geo === void 0 ? void 0 : geo.lat) != null && (geo === null || geo === void 0 ? void 0 : geo.lon) != null) {\n      loadWeather();\n    }\n    return () => {\n      cancelled = true;\n    };\n  }, [city, geo, units]); // ← add units here!\n\n  return {\n    current,\n    daily,\n    hourly,\n    loading,\n    error\n  };\n}\n_s(useWeather, \"nDdJAIXJR/Z7/3Cv/zNVUyk4mkc=\");","map":{"version":3,"names":["useState","useEffect","fetchCurrentByCoords","fetchDailyForecastByCoords","fetchHourlyForecastByCoords","geocodeCity","useWeather","city","geo","units","_s","current","setCurrent","daily","setDaily","hourly","setHourly","loading","setLoading","error","setError","cancelled","loadWeather","coords","lat","lon","curRes","dayRes","hrRes","Promise","all","forecastDays","forecastHours","err","message","trim"],"sources":["/Users/dfashemo/seoTechDev/weatherApp/src/hooks/useWeather.js"],"sourcesContent":["// src/hooks/useWeather.js\nimport { useState, useEffect } from 'react';\nimport {\n  fetchCurrentByCoords,\n  fetchDailyForecastByCoords,\n  fetchHourlyForecastByCoords,\n  geocodeCity,\n} from '../api/weather';\n\n/**\n * @param {{\n *   city?: string,\n *   geo?: { lat: number, lon: number },\n *   units?: 'METRIC' | 'IMPERIAL'\n * }} options\n */\nexport function useWeather({ city = null, geo = null, units = 'METRIC' } = {}) {\n  const [current, setCurrent] = useState(null);\n  const [daily,   setDaily]   = useState(null);\n  const [hourly,  setHourly]  = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error,   setError]   = useState(null);\n\n  useEffect(() => {\n    let cancelled = false;\n\n    async function loadWeather() {\n      setLoading(true);\n      setError(null);\n\n      try {\n        // 1) figure out coords\n        const coords = city\n          ? await geocodeCity(city)\n          : { lat: geo.lat, lon: geo.lon };\n\n        // 2) fire all three with the correct units\n        const [curRes, dayRes, hrRes] = await Promise.all([\n          fetchCurrentByCoords(      coords, units),\n          fetchDailyForecastByCoords(coords, 5, 5, units),\n          fetchHourlyForecastByCoords(coords, 24, 24, units),\n        ]);\n\n        if (!cancelled) {\n          setCurrent(curRes);\n          setDaily(  dayRes.forecastDays   || dayRes);\n          setHourly( hrRes.forecastHours  || hrRes);\n        }\n      } catch (err) {\n        if (!cancelled) setError(err.message);\n      } finally {\n        if (!cancelled) setLoading(false);\n      }\n    }\n\n    // only run if we have a city or geo coords\n    if (\n      (city && city.trim()) ||\n      (geo?.lat != null && geo?.lon != null)\n    ) {\n      loadWeather();\n    }\n\n    return () => { cancelled = true; };\n  }, [city, geo, units]);   // ← add units here!\n\n  return { current, daily, hourly, loading, error };\n}\n"],"mappings":";AAAA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SACEC,oBAAoB,EACpBC,0BAA0B,EAC1BC,2BAA2B,EAC3BC,WAAW,QACN,gBAAgB;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,UAAUA,CAAC;EAAEC,IAAI,GAAG,IAAI;EAAEC,GAAG,GAAG,IAAI;EAAEC,KAAK,GAAG;AAAS,CAAC,GAAG,CAAC,CAAC,EAAE;EAAAC,EAAA;EAC7E,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAIC,QAAQ,CAAC,GAAKd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,MAAM,EAAGC,SAAS,CAAC,GAAIhB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACmB,KAAK,EAAIC,QAAQ,CAAC,GAAKpB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,IAAIoB,SAAS,GAAG,KAAK;IAErB,eAAeC,WAAWA,CAAA,EAAG;MAC3BJ,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MAEd,IAAI;QACF;QACA,MAAMG,MAAM,GAAGhB,IAAI,GACf,MAAMF,WAAW,CAACE,IAAI,CAAC,GACvB;UAAEiB,GAAG,EAAEhB,GAAG,CAACgB,GAAG;UAAEC,GAAG,EAAEjB,GAAG,CAACiB;QAAI,CAAC;;QAElC;QACA,MAAM,CAACC,MAAM,EAAEC,MAAM,EAAEC,KAAK,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAChD5B,oBAAoB,CAAOqB,MAAM,EAAEd,KAAK,CAAC,EACzCN,0BAA0B,CAACoB,MAAM,EAAE,CAAC,EAAE,CAAC,EAAEd,KAAK,CAAC,EAC/CL,2BAA2B,CAACmB,MAAM,EAAE,EAAE,EAAE,EAAE,EAAEd,KAAK,CAAC,CACnD,CAAC;QAEF,IAAI,CAACY,SAAS,EAAE;UACdT,UAAU,CAACc,MAAM,CAAC;UAClBZ,QAAQ,CAAGa,MAAM,CAACI,YAAY,IAAMJ,MAAM,CAAC;UAC3CX,SAAS,CAAEY,KAAK,CAACI,aAAa,IAAKJ,KAAK,CAAC;QAC3C;MACF,CAAC,CAAC,OAAOK,GAAG,EAAE;QACZ,IAAI,CAACZ,SAAS,EAAED,QAAQ,CAACa,GAAG,CAACC,OAAO,CAAC;MACvC,CAAC,SAAS;QACR,IAAI,CAACb,SAAS,EAAEH,UAAU,CAAC,KAAK,CAAC;MACnC;IACF;;IAEA;IACA,IACGX,IAAI,IAAIA,IAAI,CAAC4B,IAAI,CAAC,CAAC,IACnB,CAAA3B,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEgB,GAAG,KAAI,IAAI,IAAI,CAAAhB,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEiB,GAAG,KAAI,IAAK,EACtC;MACAH,WAAW,CAAC,CAAC;IACf;IAEA,OAAO,MAAM;MAAED,SAAS,GAAG,IAAI;IAAE,CAAC;EACpC,CAAC,EAAE,CAACd,IAAI,EAAEC,GAAG,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAG;;EAE1B,OAAO;IAAEE,OAAO;IAAEE,KAAK;IAAEE,MAAM;IAAEE,OAAO;IAAEE;EAAM,CAAC;AACnD;AAACT,EAAA,CAnDeJ,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}