{"ast":null,"code":"var _s = $RefreshSig$();\n// src/hooks/useWeather.js\nimport { useState, useEffect } from 'react';\nimport { geocodeCity, fetchCurrentByCoords, fetchDailyForecastByCoords, fetchHourlyForecastByCoords } from '../api/weather';\nexport function useWeather({\n  city = null,\n  geo = null,\n  units = 'METRIC'\n} = {}) {\n  _s();\n  var _geo$lat, _geo$lon;\n  const [current, setCurrent] = useState(null);\n  const [daily, setDaily] = useState(null);\n  const [hourly, setHourly] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // üåü extract primitives so they don't change every render\n  const lat = (_geo$lat = geo === null || geo === void 0 ? void 0 : geo.lat) !== null && _geo$lat !== void 0 ? _geo$lat : null;\n  const lon = (_geo$lon = geo === null || geo === void 0 ? void 0 : geo.lon) !== null && _geo$lon !== void 0 ? _geo$lon : null;\n  useEffect(() => {\n    let cancelled = false;\n    async function load() {\n      setLoading(true);\n      setError(null);\n      try {\n        const coords = city ? await geocodeCity(city) : {\n          lat,\n          lon\n        };\n        const [c, d, h] = await Promise.all([fetchCurrentByCoords(coords, units), fetchDailyForecastByCoords(coords, 5, 5, units), fetchHourlyForecastByCoords(coords, 24, 24, units)]);\n        if (!cancelled) {\n          setCurrent(c);\n          setDaily(d.forecastDays || d);\n          setHourly(h.forecastHours || h);\n        }\n      } catch (e) {\n        if (!cancelled) setError(e.message);\n      } finally {\n        if (!cancelled) setLoading(false);\n      }\n    }\n    if (city && city.trim() || lat != null && lon != null) {\n      load();\n    }\n    return () => {\n      cancelled = true;\n    };\n    // ‚Üê only re-run when these primitives actually change\n  }, [city, lat, lon, units]);\n  return {\n    current,\n    daily,\n    hourly,\n    loading,\n    error\n  };\n}\n_s(useWeather, \"nDdJAIXJR/Z7/3Cv/zNVUyk4mkc=\");","map":{"version":3,"names":["useState","useEffect","geocodeCity","fetchCurrentByCoords","fetchDailyForecastByCoords","fetchHourlyForecastByCoords","useWeather","city","geo","units","_s","_geo$lat","_geo$lon","current","setCurrent","daily","setDaily","hourly","setHourly","loading","setLoading","error","setError","lat","lon","cancelled","load","coords","c","d","h","Promise","all","forecastDays","forecastHours","e","message","trim"],"sources":["/Users/dfashemo/seoTechDev/weatherApp/src/hooks/useWeather.js"],"sourcesContent":["// src/hooks/useWeather.js\nimport { useState, useEffect } from 'react';\nimport {\n  geocodeCity,\n  fetchCurrentByCoords,\n  fetchDailyForecastByCoords,\n  fetchHourlyForecastByCoords,\n} from '../api/weather';\n\nexport function useWeather({ city = null, geo = null, units = 'METRIC' } = {}) {\n  const [current, setCurrent] = useState(null);\n  const [daily,   setDaily]   = useState(null);\n  const [hourly,  setHourly]  = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error,   setError]   = useState(null);\n\n  // üåü extract primitives so they don't change every render\n  const lat = geo?.lat ?? null;\n  const lon = geo?.lon ?? null;\n\n  useEffect(() => {\n    let cancelled = false;\n\n    async function load() {\n      setLoading(true);\n      setError(null);\n      try {\n        const coords = city\n          ? await geocodeCity(city)\n          : { lat, lon };\n\n        const [c, d, h] = await Promise.all([\n          fetchCurrentByCoords(      coords, units),\n          fetchDailyForecastByCoords(coords, 5, 5, units),\n          fetchHourlyForecastByCoords(coords, 24, 24, units),\n        ]);\n\n        if (!cancelled) {\n          setCurrent(c);\n          setDaily(d.forecastDays   || d);\n          setHourly(h.forecastHours || h);\n        }\n      } catch (e) {\n        if (!cancelled) setError(e.message);\n      } finally {\n        if (!cancelled) setLoading(false);\n      }\n    }\n\n    if ((city && city.trim()) || (lat != null && lon != null)) {\n      load();\n    }\n\n    return () => {\n      cancelled = true;\n    };\n  // ‚Üê only re-run when these primitives actually change\n  }, [city, lat, lon, units]);\n\n  return { current, daily, hourly, loading, error };\n}\n"],"mappings":";AAAA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SACEC,WAAW,EACXC,oBAAoB,EACpBC,0BAA0B,EAC1BC,2BAA2B,QACtB,gBAAgB;AAEvB,OAAO,SAASC,UAAUA,CAAC;EAAEC,IAAI,GAAG,IAAI;EAAEC,GAAG,GAAG,IAAI;EAAEC,KAAK,GAAG;AAAS,CAAC,GAAG,CAAC,CAAC,EAAE;EAAAC,EAAA;EAAA,IAAAC,QAAA,EAAAC,QAAA;EAC7E,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,KAAK,EAAIC,QAAQ,CAAC,GAAKhB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiB,MAAM,EAAGC,SAAS,CAAC,GAAIlB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACqB,KAAK,EAAIC,QAAQ,CAAC,GAAKtB,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAMuB,GAAG,IAAAZ,QAAA,GAAGH,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEe,GAAG,cAAAZ,QAAA,cAAAA,QAAA,GAAI,IAAI;EAC5B,MAAMa,GAAG,IAAAZ,QAAA,GAAGJ,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEgB,GAAG,cAAAZ,QAAA,cAAAA,QAAA,GAAI,IAAI;EAE5BX,SAAS,CAAC,MAAM;IACd,IAAIwB,SAAS,GAAG,KAAK;IAErB,eAAeC,IAAIA,CAAA,EAAG;MACpBN,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MACd,IAAI;QACF,MAAMK,MAAM,GAAGpB,IAAI,GACf,MAAML,WAAW,CAACK,IAAI,CAAC,GACvB;UAAEgB,GAAG;UAAEC;QAAI,CAAC;QAEhB,MAAM,CAACI,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAClC7B,oBAAoB,CAAOwB,MAAM,EAAElB,KAAK,CAAC,EACzCL,0BAA0B,CAACuB,MAAM,EAAE,CAAC,EAAE,CAAC,EAAElB,KAAK,CAAC,EAC/CJ,2BAA2B,CAACsB,MAAM,EAAE,EAAE,EAAE,EAAE,EAAElB,KAAK,CAAC,CACnD,CAAC;QAEF,IAAI,CAACgB,SAAS,EAAE;UACdX,UAAU,CAACc,CAAC,CAAC;UACbZ,QAAQ,CAACa,CAAC,CAACI,YAAY,IAAMJ,CAAC,CAAC;UAC/BX,SAAS,CAACY,CAAC,CAACI,aAAa,IAAIJ,CAAC,CAAC;QACjC;MACF,CAAC,CAAC,OAAOK,CAAC,EAAE;QACV,IAAI,CAACV,SAAS,EAAEH,QAAQ,CAACa,CAAC,CAACC,OAAO,CAAC;MACrC,CAAC,SAAS;QACR,IAAI,CAACX,SAAS,EAAEL,UAAU,CAAC,KAAK,CAAC;MACnC;IACF;IAEA,IAAKb,IAAI,IAAIA,IAAI,CAAC8B,IAAI,CAAC,CAAC,IAAMd,GAAG,IAAI,IAAI,IAAIC,GAAG,IAAI,IAAK,EAAE;MACzDE,IAAI,CAAC,CAAC;IACR;IAEA,OAAO,MAAM;MACXD,SAAS,GAAG,IAAI;IAClB,CAAC;IACH;EACA,CAAC,EAAE,CAAClB,IAAI,EAAEgB,GAAG,EAAEC,GAAG,EAAEf,KAAK,CAAC,CAAC;EAE3B,OAAO;IAAEI,OAAO;IAAEE,KAAK;IAAEE,MAAM;IAAEE,OAAO;IAAEE;EAAM,CAAC;AACnD;AAACX,EAAA,CAnDeJ,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}